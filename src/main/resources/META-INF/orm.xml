<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
                 version="2.0">
    <named-query name="Application.findApplicationSummaries">
        <query>
            select NEW com.huayuan.domain.credit.ApplicationSummary(appl.applicationNo, idcard.name, idcard.idNo,
            appl.existingFlag, appl.applyTime,
            ma.city, appl.status, appl.createTime,apv.creditor) from Application appl , Approval apv,
            IdCard idcard, Member mem, ValueMobileArea ma where appl.member.id = mem.id and
            appl.applicationNo = apv.application.applicationNo and mem.id = idcard.member.id
            and ma.sevenPrefix = substring(mem.mobile, 0 , 8) and (appl.status = 3 or appl.status = 99)
        </query>
    </named-query>
    <named-query name="CreditCard.findByCardNo">
        <query>
           select c from CreditCard c where c.isValid=true and c.cardNo = ?1
        </query>
    </named-query>

    <named-query name="Application.findByMemberIdWithProfile">
        <query>
            select NEW com.huayuan.domain.member.MemberProfile$Application(appl.applicationNo, appl.applyTime,
            apv.decision) from
            Application appl, Approval apv where appl.applicationNo = apv.application.applicationNo and appl.member.id =
            ?1 and appl.status in (3,5,7)
        </query>
    </named-query>

    <named-query name="Application.findByMemberId">
        <query>SELECT appl FROM Application appl WHERE appl.member.id=?1 and appl.status in(0,1,2,3,4,99)</query>
    </named-query>
    <named-query name="IdCard.findFromPbocOut">
        <query>SELECT ic from IdCard ic where ic.idNo in (select id_No from PbocOut)</query>
    </named-query>
    <named-query name="RepayPlan.findByMemberIdAndDueDateLessThan">
        <query>SELECT rp FROM RepayPlan rp WHERE rp.paidPrincipal =0 and
            rp.member.id=?1 order by rp.dueDate asc
        </query>
    </named-query>
    <named-query name="RepayPlan.findByLoanIdAndDueDateLessThan">
        <query>SELECT rp FROM RepayPlan rp WHERE rp.paidPrincipal =0 and
            rp.loan.id=?1 order by rp.dueDate, rp.dueAmt
        </query>
    </named-query>

    <named-query name="RepayPlan.findByDueDate">
        <query>SELECT rp FROM RepayPlan rp WHERE rp.dueDate &lt;= ?1 and rp.paidPrincipal =0
        </query>
    </named-query>

    <named-query name="CreditCard.findByMemberId">
        <query>SELECT card FROM CreditCard card WHERE card.member.id = ?1 and isValid = true
        </query>
    </named-query>
    <named-query name="RepayPlan.findByLoanId">
        <query>SELECT rp FROM RepayPlan rp WHERE rp.loan.id =?1 order by rp.dueDate asc
        </query>
    </named-query>
    <named-query name="TelephoneVerification.findByTypeAndDecision">
        <query>select tv from TelephoneVerification tv where tv.type = ?1 and tv.decision = ?2 and (tv.tvMemAns1 != ''
            or tv.tvMemAns2 != '')
        </query>
    </named-query>

    <named-query name="Pboc.findByStatusWithSummary">
        <query>SELECT NEW com.huayuan.domain.credit.PbocSummary(pb.id, pb.certNo, pb.name, pb.createTime,
            pb.keyiner, pb.risk, pb.status) FROM Pboc pb where pb.status in (2,3)
        </query>
    </named-query>

    <named-native-query name="TvQuestionList.Random" result-set-mapping="tvQuestionListMapping">
        <query>  select home.ADDRESS from (select top 2 ADDRESS from TV_QUESTION_LIST where FLAG = 2 and CITY = ?1 order by newid()) home
                 union select company.ADDRESS from (select top 2 ADDRESS from TV_QUESTION_LIST where FLAG = 1 and CITY = ?1 order by newid()) company</query>
    </named-native-query>
    <named-native-query name="Member.findMembersWithLoanSummary" result-set-mapping="memberLoanSummaryMapping">
        <query>
            select m.id, m.sex, m.mobile,m.email,
            m.education, m.industry, m.WC_USER_NAME,ic.ID_NO, ic.NAME, ma.city, count(loan.BID) as loanCount, m.block_code
            from Member m left join ID_CARD ic on m.ID = ic.MEMBER_ID left join Borrow loan on loan.MEMBER_ID = m.id
            left join VALUE_MOBILE_AREA ma on ma.N1_7 = substring(m.mobile, 0 , 8) where ic.ID_NO > ''
            group by m.id, m.sex, m.mobile, m.email, m.education, m.industry, m.block_code, ma.city, m.WC_USER_NAME, ic.NAME,ic.ID_NO
        </query>
    </named-native-query>

    <named-native-query name="Member.searchMembersWithLoanSummary" result-set-mapping="memberLoanSummaryMapping">
        <query>
            select m.id, m.sex, m.mobile,m.email,
            m.education, m.industry, m.WC_USER_NAME,ic.ID_NO, ic.NAME, ma.city, count(loan.BID) as loanCount, m.block_code
            from Member m left join ID_CARD ic on m.ID = ic.MEMBER_ID left join Borrow loan on loan.MEMBER_ID = m.id
            left join VALUE_MOBILE_AREA ma on ma.N1_7 = substring(m.mobile, 0 , 8) :q
            group by m.id, m.sex, m.mobile, m.email, m.education, m.industry, m.block_code, ma.city, m.WC_USER_NAME, ic.NAME,ic.ID_NO
         </query>
    </named-native-query>

    <named-native-query name="Member.findMemberLoans" result-set-mapping="memberLoansMapping">
        <query>
            select idcard.MEMBER_ID,idcard.NAME,b.BID,b.AMT,b.APR,b.TERM,b.STARTDATE,
            b.PRINAIPAL,b.PAID_PRINAIPAL,b.INTEREST,b.PAID_INTEREST,b.PAID_OVERDUE_INT,b.CUR_DELQ,b.MAX_DELQ,b.STATUS
            from ID_CARD idcard inner join BORROW b on b.MEMBER_ID = idcard.MEMBER_ID :q
         </query>
    </named-native-query>

    <named-native-query name="Loan.findLoanTransDetails" result-set-mapping="loanTransMapping">
        <query>
            select b.BID,appl.APPL_NO,appl.APPLY_TIME,idcard.NAME,cc.CARD_NO,cc.BANK,appl.AMT,
            p.PAY_AMT,p.TRANS_CODE,p.TRANS_TIME,p.CONFORMED_ID,p.CONFORMED_DATE,p.ERROR_MESSAGE,p.CONFORMED from MEMBER m
            inner join ID_CARD idcard on m.ID = idcard.MEMBER_ID
            inner join APPL appl on appl.MEMBER_ID = m.ID
            inner join BORROW b on b.APP_NO = appl.APPL_NO
            inner join CREDITCARD cc on appl.CC_ID = cc.ID
            left join PAY p on p.APP_NO = appl.APPL_NO :q
         </query>
    </named-native-query>

    <sql-result-set-mapping name="loanTransMapping">
        <column-result name="BID"/>
        <column-result name="APPL_NO"/>
        <column-result name="APPLY_TIME"/>
        <column-result name="NAME"/>
        <column-result name="CARD_NO"/>
        <column-result name="AMT"/>
        <column-result name="PAY_AMT"/>
        <column-result name="TRANS_CODE"/>
        <column-result name="TRANS_TIME"/>
        <column-result name="CONFORMED_ID"/>
        <column-result name="CONFORMED_DATE"/>
        <column-result name="ERROR_MESSAGE"/>
        <column-result name="CONFORMED"/>
    </sql-result-set-mapping>

    <sql-result-set-mapping name="tvQuestionListMapping">
        <column-result name="address"/>
    </sql-result-set-mapping>
    <sql-result-set-mapping name="memberLoanSummaryMapping">
        <column-result name="id"/>
        <column-result name="sex"/>
        <column-result name="mobile"/>
        <column-result name="email"/>
        <column-result name="education"/>
        <column-result name="industry"/>
        <column-result name="WC_USER_NAME"/>
        <column-result name="ID_NO"/>
        <column-result name="NAME"/>
        <column-result name="CITY"/>
        <column-result name="loanCount"/>
        <column-result name="block_code"/>
    </sql-result-set-mapping>
    <sql-result-set-mapping name="memberLoansMapping">
        <column-result name="MEMBER_ID"/>
        <column-result name="NAME"/>
        <column-result name="BID"/>
        <column-result name="AMT"/>
        <column-result name="APR"/>
        <column-result name="TERM"/>
        <column-result name="STARTDATE"/>
        <column-result name="PRINAIPAL"/>
        <column-result name="PAID_PRINAIPAL"/>
        <column-result name="INTEREST"/>
        <column-result name="PAID_INTEREST"/>
        <column-result name="PAID_OVERDUE_INT"/>
        <column-result name="CUR_DELQ"/>
        <column-result name="MAX_DELQ"/>
        <column-result name="STATUS"/>
    </sql-result-set-mapping>
</entity-mappings>